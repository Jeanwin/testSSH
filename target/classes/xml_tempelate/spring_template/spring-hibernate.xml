<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
	default-lazy-init="true">
	<description>hibernate配置文件 </description>

	<!--配置Hibernate sessionFactory -->
	<!--使用注解配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<!--不使用hibernate注解配置 -->
		<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"> -->
		<property name="dataSource" ref="datasource" />
		<!-- 注意：我用的是Annotation的方式配置的Hibernate，这里的property的name是annotatedClasses,annotatedPackages -->
		<property name="annotatedPackages">
			<list>
				<value>com.zonekey.app.beans</value>
			</list>
		</property>
		<!--设置hibernate属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 设置Hibernate方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- 是否打印sql -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 格式化sql -->
				<prop key="hibernate.format_sql">true</prop>
				<!-- 是否自动更新表 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<!-- 最大抓取深度，如果为0，则关闭默认的外连接抓取。建议值为0-3 -->
				<prop key="hibernate.max_fetch_depth">1</prop>
				<!-- 用于生成有助于调试的注释信息，默认为关闭 -->
				<prop key="hibernate.use_sql_comments">true</prop>
			</props>
		</property>
	</bean>

	<!--配置声明式事务管理（采用注解的方式） -->
	<bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!--使用注解管理事务 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!--使用AOP管理事务 -->
	<!-- <aop:config> -->
	<!--定义切入点 -->
	<!-- <aop:pointcut id="txMethod" expression="execution(* org.zhy.demo.dao.impl.*DaoImpl.*(..))" /> -->
	<!--定义通知 -->
	<!-- <aop:advisor advice-ref="txAdvice" pointcut-ref="txMethod"/> -->
	<!-- </aop:config> -->
	<!-- AOP切面声明事务管理 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> -->
	<!-- <tx:attributes> -->
	<!-- <tx:method name="save*" propagation="REQUIRED" /> --> <!-- 支持当前事务，如果执行到save开头的任何方法时没有事务则开启一个事务 这是最常见的方式 -->
	<!-- <tx:method name="update*" propagation="REQUIRED" /> --><!-- 支持当前事务，如果执行到save开头的任何方法时没有事务则开启一个事务 这是最常见的方式 -->
	<!-- <tx:method name="add*" propagation="REQUIRED" /> --><!-- 支持当前事务，如果执行到save开头的任何方法时没有事务则开启一个事务 这是最常见的方式 -->
	<!-- <tx:method name="delete*" propagation="REQUIRED" /> --><!-- 支持当前事务，如果执行到save开头的任何方法时没有事务则开启一个事务 这是最常见的方式 -->
	<!-- <tx:method name="find*" propagation="SUPPORTS" read-only="true" /> --> <!-- 支持当前事务，如果当前没有事务，就以非事务方式执行。只读 -->
	<!-- <tx:method name="get*" propagation="SUPPORTS" read-only="true" /> --><!-- 支持当前事务，如果当前没有事务，就以非事务方式执行。只读 -->
	<!-- <tx:method name="*" /> -->
	<!-- </tx:attributes> -->
	<!-- </tx:advice> -->
</beans>